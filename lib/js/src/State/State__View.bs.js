// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var $$Promise = require("reason-promise/lib/js/src/js/promise.js");
var Caml_chrome_debugger = require("bs-platform/lib/js/caml_chrome_debugger.js");
var State$AgdaModeVscode = require("./State.bs.js");

function Impl(Editor) {
  var State = State$AgdaModeVscode.Impl(Editor);
  var sendEvent = function ($$event, state) {
    return $$Promise.map(Curry._2(State.sendEventToView, state, $$event), (function (param) {
                  return state;
                }));
  };
  var display$prime = function (header, message) {
    if (message !== undefined) {
      var partial_arg_001 = /* Plain */Caml_chrome_debugger.variant("Plain", 0, [message]);
      var partial_arg = /* Display */Caml_chrome_debugger.variant("Display", 0, [
          header,
          partial_arg_001
        ]);
      return (function (param) {
          return sendEvent(partial_arg, param);
        });
    }
    var partial_arg$1 = /* Display */Caml_chrome_debugger.variant("Display", 0, [
        header,
        /* Nothing */0
      ]);
    return (function (param) {
        return sendEvent(partial_arg$1, param);
      });
  };
  var display = function (header) {
    var partial_arg = /* Plain */Caml_chrome_debugger.variant("Plain", 0, [header]);
    return (function (param) {
        return display$prime(partial_arg, param);
      });
  };
  var displayError = function (header) {
    var partial_arg = /* Error */Caml_chrome_debugger.variant("Error", 3, [header]);
    return (function (param) {
        return display$prime(partial_arg, param);
      });
  };
  var displayWarning = function (header) {
    var partial_arg = /* Warning */Caml_chrome_debugger.variant("Warning", 2, [header]);
    return (function (param) {
        return display$prime(partial_arg, param);
      });
  };
  var displaySuccess = function (header) {
    var partial_arg = /* Success */Caml_chrome_debugger.variant("Success", 1, [header]);
    return (function (param) {
        return display$prime(partial_arg, param);
      });
  };
  return {
          State: State,
          sendEvent: sendEvent,
          display$prime: display$prime,
          display: display,
          displayError: displayError,
          displayWarning: displayWarning,
          displaySuccess: displaySuccess
        };
}

var Js$prime;

var Js;

exports.Js$prime = Js$prime;
exports.Js = Js;
exports.Impl = Impl;
/* Promise Not a pure module */
